{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.9144f6983a4bff37122b.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Main from \"../component/Main\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPhoneSquare } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      row: [],\n      isPageLoading: false,\n      language: \"eng\",\n    };\n  }\n  async componentDidMount() {\n    this.setState({ isPageLoading: true });\n    setInterval(async()=>{\n      try {\n        const response = await fetch(\n          \"https://v12qe1f1jf.execute-api.us-east-1.amazonaws.com/Dev/get-all-data\",\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        const responseJson = await response.json();\n        console.log(responseJson);\n        const newData = [];\n        responseJson.responseData?.forEach((element) => {\n          newData.push({\n            name: element?.name,\n            arrived: element?.arrived,\n            PhoneNo: element?.PhoneNo,\n            dateTime: element?.dateTime\n          });\n          \n        });\n        this.setState({ row: newData }, () => {\n          console.log(\"Row\", this.state.row);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },1500)\n    this.setState({ isPageLoading: false });\n  }\n  \n   async callPatient(number, name) {\n     console.log(number);\n     console.log(name);\n     await fetch(\"https://q1fjzbeq8l.execute-api.us-east-1.amazonaws.com/non-prod/make-outbound-call\", {\n        method: \"POST\",\n        body: JSON.stringify({\n            \"callbackNumber\": number.toString(),\n            \"name\": name\n        }),\n        headers: { 'Access-Control-Allow-Headers': 'Content-Type/JSON',\n               'Access-Control-Allow-Origin': '*',\n               'Access-Control-Allow-Methods': 'OPTIONS,POST,GET',\n            \"X-API-Key\": \"4ej79ShQA8JeqVFOKV366OnjC4ZMUKk9kUWnOat2\",\n            \"Content-Type\": \"application/json\"\n        }\n    })\n}\n\nasync changeStatus(value,number) {\n  \n  await fetch(\"https://v12qe1f1jf.execute-api.us-east-1.amazonaws.com/Dev/get-patient-data/\"+number+\"/put-patient-data\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n            \"arrived\": value\n        }),\n        headers: { \n          \"Content-Type\": \"application/json\"\n      }\n    })\n  \n}\n\n\nrender() {\n    return (\n      <Main isLoading={this.state.isPageLoading}>\n        <div className=\"w-full md:w-3/4 mx-auto\">\n          <div className=\"bg-blue-900 w-full p-4 \">\n            <label className=\"font-semibold font-montserrat text-xl text-white \">\n              Patient Arrival Dashboard\n            </label>\n          </div>\n          <div className=\"grid grid-cols-8\">\n            <div className=\"col-span-2 border text-center py-4\">\n              <label className=\"font-montserrat md:text-lg font-semibold\">\n                Patient\n              </label>\n            </div>\n            <div className=\"col-span-2 border text-center py-4\">\n              <label className=\"font-montserrat text-lg font-semibold\">\n                Appointment Time\n              </label>\n            </div>\n            <div className=\"col-span-4 border text-center py-1\">\n              <label className=\"font-montserrat text-lg font-semibold\">\n                Status\n              </label>\n              <div className=\"grid grid-cols-4 border-t\">\n                <div className=\"col-span-1 border-r font-montserrat font-semibold pt-3\">\n                  Arrived (Y/N)\n                </div>\n                <div className=\"col-span-1 border-r font-montserrat font-semibold pt-3\">\n                  Signed In (Y/N)\n                </div>\n                <div className=\"col-span-1 border-r font-montserrat font-semibold \">\n                  Checking In (Waiting/IN)\n                </div>\n                <div className=\"col-span-1 font-montserrat font-semibold my-auto\">\n                  In With DOC/HYG\n                </div>\n              </div>\n            </div>\n          </div>\n          <div>\n            {this.state.row.map((item, index) => {\n              return (\n                <div className=\"grid grid-cols-8\" key={index}>\n                  <div\n                    className={\n                      \"col-span-2 border text-center pt-2\" +\n                      (item.arrived === \"Yes\" && \" bg-green-500 \")+\n                      (item.arrived === \"With Doctor\" && \" bg-gray-500 \")\n\n                    }\n                  >\n                    <label className=\"font-semibold font-montserrat\">\n                      {item.name}\n                    </label>\n                  </div>\n                  <div\n                    className={\n                      \"col-span-2 border text-center pt-2\" +\n                      (item.arrived === \"Yes\" && \" bg-green-500 \")+\n                      (item.arrived === \"With Doctor\" && \" bg-gray-500 \")\n                    }\n                  >\n                    <label>{item.dateTime}</label>\n                  </div>\n\n                  <div\n                    className={\n                      \"col-span-1 border text-center pt-2\" +\n                      (item.arrived === \"Yes\" && \" bg-green-500 \")+\n                      (item.arrived === \"With Doctor\" && \" bg-gray-500 \")\n                    }\n                  ><select value={item.arrived} onChange={(event)=>{\n                    this.changeStatus(event.target.value,item.PhoneNo)\n                    const newrow=[...this.state.row]\n                    newrow[index].arrived=event.target.value\n                    this.setState({\n                      row:newrow\n                    })\n                  }}> \n                    <option value=\"No\">No</option>\n                    <option value=\"Yes\">Yes</option>\n                    <option value=\"With Doctor\">With Doctor</option>\n                  </select>\n                  </div>\n\n                  <div\n                    className={\n                      \"col-span-1 border text-center pt-2\" +\n                      (item.arrived === \"Yes\" && \" bg-green-500 \")+\n                      (item.arrived === \"With Doctor\" && \" bg-gray-500 \")                    }\n                  >\n                    Yes\n                  </div>\n                  <div\n                    className={\n                      \"col-span-1 border text-center pt-2\" +\n                      (item.arrived === \"Yes\" && \" bg-green-500 \")+\n                      (item.arrived === \"With Doctor\" && \" bg-gray-500 \")\n                    }\n                  >\n                    Waiting to be called\n                    <a onClick={() => {\n                      this.callPatient(item.PhoneNo, item.name)}}>\n                      <FontAwesomeIcon\n                        icon={faPhoneSquare}\n                        size=\"2x\"\n                        className=\"cursor-pointer mr-6\"\n                      ></FontAwesomeIcon>\n                    </a>\n                  </div>\n                  <div className={\"col-span-1 border text-center pt-2\"+\n                (item.arrived === \"Yes\" && \" bg-green-500 \")+\n                (item.arrived === \"With Doctor\" && \" bg-gray-500 \")}>\n                    With Hygienist (casey)\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          <div></div>\n          {/* {this.state.language === \"eng\" && (\n            <div className=\"\">\n              <script src=\"https://www.gstatic.com/dialogflow-console/fast/messenger/bootstrap.js?v=1\"></script>\n              <df-messenger\n                intent=\"WELCOME\"\n                chat-title=\"DentalBot\"\n                agent-id=\"fc6efb50-7c8a-4c34-a756-dcd49395a458\"\n                language-code=\"en\"\n              ></df-messenger>\n            </div>\n          )} */}\n          {/* {this.state.language === \"spain\" && (\n            <div className=\"\">\n              <script src=\"https://www.gstatic.com/dialogflow-console/fast/messenger/bootstrap.js?v=1\"></script>\n              <df-messenger\n                intent=\"WELCOME\"\n                chat-title=\"DentalBot\"\n                agent-id=\"fc6efb50-7c8a-4c34-a756-dcd49395a458\"\n                language-code=\"es\"\n              ></df-messenger>\n            </div>\n          )} */}\n          {/* <div className=\"w-56 pt-8 float-right\">\n            <Select\n              name=\"Language\"\n              onNewValue={(res) =>\n                this.setState({\n                  language: res.value,\n                })\n              }\n              onError={(error) =>\n                this.setState({\n                  errorlanguage: error,\n                })\n              }\n              defaultValue={this.state.language}\n              options={[\n                {\n                  value: \"spain\",\n                  label: \"Spainish\",\n                },\n                {\n                  value: \"eng\",\n                  label: \"English\",\n                },\n              ]}\n            />\n          </div> */}\n        </div>\n      </Main>\n    );\n  }\n}\n"],"mappings":"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","sourceRoot":""}